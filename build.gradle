/*
 * Copyright (c) Squaredesk GmbH and Oliver Dotzauer.
 *
 * This program is distributed under the squaredesk open source license. See the LICENSE file
 * distributed with this work for additional information regarding copyright ownership. You may also
 * obtain a copy of the license at
 *
 *   https://squaredesk.ch/license/oss/LICENSE
 */
ext.javaVersion = '1.8'
ext.metricsVersion = '3.2.1'
ext.junitJupiterVersion = '5.0.0-M4'
ext.junitPlatformVersion = '1.0.0-M4'
ext.hamcrestVersion = '2.0.0.0'
ext.slf4jVersion = '1.7.5'
ext.logbackVersion = '1.2.1'
ext.rxJavaVersion = '2.0.5'
ext.springVersion = '4.3.5.RELEASE'


buildscript {
    repositories {
        mavenCentral()
        // The following is only necessary if you want to use SNAPSHOT releases.
        // maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    }
}


subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    group = 'ch.squaredesk.nova'
    version = '4.0.0-SNAPSHOT'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:' + junitJupiterVersion
        testImplementation('org.hamcrest:hamcrest-junit:' + hamcrestVersion) {
            exclude module: 'junit'
        }
        testRuntime 'org.junit.jupiter:junit-jupiter-engine:' + junitJupiterVersion
    }

    // add LICENSE file to jar
    jar {
        from "${project.rootProject.projectDir}/LICENSE"
    }

    // define sources jar
    task sourceJar(type: Jar) {
        from project.projectDir
            include 'src/main/**/*.java'
        from project.rootProject.projectDir
            include 'LICENSE'
    }

    // maven publishing configuration
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java


                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }
}
